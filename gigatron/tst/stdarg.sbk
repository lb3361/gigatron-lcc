#VCPUv5

# ======== ('DATA', 'x', code0, 8, 2)
def code0():
	align(2);
	label('x');
	words(1); # 1
	words(2); # 2
	words(3); # 3
	words(4); # 4
# ======== ('CODE', 'main', code1)
def code1():
	label('main');
	_PROLOGUE(52,52,0x0); # save=None
	_LDI('.2');STW(R8);
	CALLI('print');
	_LDI('.3');STW(R8);
	_LDI('.4');STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('print');
	_LDI('.5');STW(R8);
	LDI(3);STW(R9);
	_MOV(R9,[SP,4]);
	LDI(10);STW(R10);
	_MOV(R10,[SP,6]);
	CALLI('print');
	_LDI('.6');STW(R8);
	_LDI('.7');STW(R9);
	_MOV(R9,[SP,4]);
	_LDI('.8');STW(R10);
	_MOV(R10,[SP,6]);
	LDI(4);STW(R11);
	_MOV(R11,[SP,8]);
	LDI(10);STW(R12);
	_MOV(R12,[SP,10]);
	CALLI('print');
	_LDI('.9');STW(R8);
	_LDI('.7');STW(R9);
	_MOV(R9,[SP,4]);
	_LDI('.8');STW(R10);
	_MOV(R10,[SP,6]);
	_FMOV('.10',F11);
	_FMOV(F11,[SP,8]);
	LDI(10);STW(R14);
	_MOV(R14,[SP,14]);
	CALLI('print');
	_LDI('.11');STW(R8);
	_SP(4);STW(T2);_BMOV('x',[T2],8,2);
	_SP(12);STW(T2);_BMOV('x',[T2],8,2);
	_SP(20);STW(T2);_BMOV('x',[T2],8,2);
	_SP(28);STW(T2);_BMOV('x',[T2],8,2);
	_SP(36);STW(T2);_BMOV('x',[T2],8,2);
	_SP(44);STW(T2);_BMOV('x',[T2],8,2);
	CALLI('print');
	LDI(0);
	label('.1');
	_EPILOGUE(52,52,0x0,saveAC=True);
# ======== ('CODE', 'print', code2)
def code2():
	label('print');
	_PROLOGUE(24,12,0xc0); # save=R6-7
	_SP(2+24);STW(R22);
	LDW(R8);DOKE(R22);
	_SP(4+24);STW(R7);
	_BRA('.17');
	label('.14');
	_SP(2+24);DEEK();PEEK();XORI(37);_BNE('.18');
	_SP(2+24);DEEK();ADDI(1);STW(R22);
	_SP(2+24);STW(R21);
	LDW(R22);DOKE(R21);
	LDW(R22);PEEK();STW(R6);
	LDW(R6);XORI(115);_BEQ('.42');
	LDW(R6);_CMPIS(115);_BGT('.51');
	label('.50');
	LDW(R6);_CMPIS(98);_BLT('.20');
	LDW(R6);_CMPIS(102);_BGT('.20');
	_LDI(v('.52')-196);STW(R22);
	LDW(R6);LSLW();ADDW(R22);DEEK();CALL(vAC);
	label('.51');
	LDW(R6);XORI(119);_BEQ('.38');
	_BRA('.20');
	label('.23');
	_LDI(0xfffe);STW(R22);
	LDI(8);ADDW(R7);ADDI(1);ANDW(R22);STW(R22);
	LDW(R22);STW(R7);
	_SP(-8+24);STW(T2);LDW(R22);SUBI(-(-8));_BMOV([vAC],[T2],8,2);
	_LDI('.26');STW(R8);
	_MOV(R8,[SP,2]);
	_SP(-8+24);DEEK();STW(R9);
	_MOV(R9,[SP,4]);
	_SP(-6+24);DEEK();STW(R10);
	_MOV(R10,[SP,6]);
	_SP(-4+24);DEEK();STW(R11);
	_MOV(R11,[SP,8]);
	_SP(-2+24);DEEK();STW(R12);
	_MOV(R12,[SP,10]);
	CALLI('printf');
	_BRA('.19');
	label('.30');
	_LDI('.31');STW(R8);
	_MOV(R8,[SP,2]);
	_LDI(0xfffe);STW(R22);
	LDI(2);ADDW(R7);ADDI(1);ANDW(R22);
	STW(R7);
	SUBI(-(-2));PEEK();STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('printf');
	_BRA('.19');
	label('.34');
	_LDI('.35');STW(R8);
	_MOV(R8,[SP,2]);
	_LDI(0xfffe);STW(R22);
	LDI(2);ADDW(R7);ADDI(1);ANDW(R22);
	STW(R7);
	SUBI(-(-2));DEEK();STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('printf');
	_BRA('.19');
	label('.38');
	_LDI('.39');STW(R8);
	_MOV(R8,[SP,2]);
	_LDI(0xfffe);STW(R22);
	LDI(2);ADDW(R7);ADDI(1);ANDW(R22);
	STW(R7);
	SUBI(-(-2));DEEK();STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('printf');
	_BRA('.19');
	label('.42');
	_LDI('.43');STW(R8);
	_MOV(R8,[SP,2]);
	_LDI(0xfffe);STW(R22);
	LDI(2);ADDW(R7);ADDI(1);ANDW(R22);
	STW(R7);
	SUBI(-(-2));DEEK();STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('printf');
	_BRA('.19');
	label('.46');
	_LDI('.47');STW(R8);
	_MOV(R8,[SP,2]);
	LDI(5);ADDW(R7);
	STW(R7);
	SUBI(-(-5));_FMOV([vAC],F9);
	_FMOV(F9,[SP,4]);
	CALLI('printf');
	_BRA('.19');
	label('.20');
	_LDI('.31');STW(R8);
	_MOV(R8,[SP,2]);
	_SP(2+24);DEEK();PEEK();STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('printf');
	_BRA('.19');
	label('.18');
	_LDI('.31');STW(R8);
	_MOV(R8,[SP,2]);
	_SP(2+24);DEEK();PEEK();STW(R9);
	_MOV(R9,[SP,4]);
	CALLI('printf');
	label('.19');
	label('.15');
	_SP(2+24);STW(R22);
	_SP(2+24);DEEK();ADDI(1);DOKE(R22);
	label('.17');
	_SP(2+24);DEEK();PEEK();_BNE('.14');
	LDI(0);
	label('.12');
	_EPILOGUE(24,12,0xc0,saveAC=True);
# ======== ('DATA', '.52', code3, 0, 2)
def code3():
	align(2);
	label('.52');
	words('.23');
	words('.30');
	words('.34');
	words('.20');
	words('.46');
# ======== ('DATA', '.47', code4, 0, 1)
def code4():
	label('.47');
	bytes(37,102,0);
# ======== ('DATA', '.43', code5, 0, 1)
def code5():
	label('.43');
	bytes(37,115,0);
# ======== ('DATA', '.39', code6, 0, 1)
def code6():
	label('.39');
	bytes(37,120,0);
# ======== ('DATA', '.35', code7, 0, 1)
def code7():
	label('.35');
	bytes(37,100,0);
# ======== ('DATA', '.31', code8, 0, 1)
def code8():
	label('.31');
	bytes(37,99,0);
# ======== ('DATA', '.26', code9, 0, 1)
def code9():
	label('.26');
	bytes(123,37,100,32,37,100,32,37);
	bytes(100,32,37,100,125,0);
# ======== ('DATA', '.11', code10, 0, 1)
def code10():
	label('.11');
	bytes(37,98,32,37,98,32,37,98);
	bytes(32,37,98,32,37,98,32,37);
	bytes(98,10,0);
# ======== ('DATA', '.10', code11, 0, 1)
def code11():
	label('.10');
	bytes(131,32,0,0,0); # 5
# ======== ('DATA', '.9', code12, 0, 1)
def code12():
	label('.9');
	bytes(37,115,37,115,32,37,102,37);
	bytes(99,0);
# ======== ('DATA', '.8', code13, 0, 1)
def code13():
	label('.8');
	bytes(115,116,0);
# ======== ('DATA', '.7', code14, 0, 1)
def code14():
	label('.7');
	bytes(116,101,0);
# ======== ('DATA', '.6', code15, 0, 1)
def code15():
	label('.6');
	bytes(37,115,37,115,32,37,119,37);
	bytes(99,0);
# ======== ('DATA', '.5', code16, 0, 1)
def code16():
	label('.5');
	bytes(116,101,115,116,32,37,100,37);
	bytes(99,0);
# ======== ('DATA', '.4', code17, 0, 1)
def code17():
	label('.4');
	bytes(50,0);
# ======== ('DATA', '.3', code18, 0, 1)
def code18():
	label('.3');
	bytes(116,101,115,116,32,37,115,10);
	bytes(0);
# ======== ('DATA', '.2', code19, 0, 1)
def code19():
	label('.2');
	bytes(116,101,115,116,32,49,10,0);
# ======== (epilog)
code=[
	('EXPORT', 'x'),
	('DATA', 'x', code0, 8, 2),
	('EXPORT', 'main'),
	('CODE', 'main', code1),
	('EXPORT', 'print'),
	('CODE', 'print', code2),
	('DATA', '.52', code3, 0, 2),
	('IMPORT', 'printf'),
	('DATA', '.47', code4, 0, 1),
	('DATA', '.43', code5, 0, 1),
	('DATA', '.39', code6, 0, 1),
	('DATA', '.35', code7, 0, 1),
	('DATA', '.31', code8, 0, 1),
	('DATA', '.26', code9, 0, 1),
	('DATA', '.11', code10, 0, 1),
	('DATA', '.10', code11, 0, 1),
	('DATA', '.9', code12, 0, 1),
	('DATA', '.8', code13, 0, 1),
	('DATA', '.7', code14, 0, 1),
	('DATA', '.6', code15, 0, 1),
	('DATA', '.5', code16, 0, 1),
	('DATA', '.4', code17, 0, 1),
	('DATA', '.3', code18, 0, 1),
	('DATA', '.2', code19, 0, 1) ]
module(code=code, name='tst/stdarg.c', cpu=5);

# Local Variables:
# mode: python
# indent-tabs-mode: t
# End:
